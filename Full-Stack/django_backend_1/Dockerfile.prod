# License: MIT
# Author: Joel Wembo
# Company: prodxcloud LLC
# Copyright (c) 2024 prodxcloud LLC. All rights reserved.

# Copyright (c) 2024 ProdxCloud. All rights reserved.
# This software is proprietary and confidential.
# Unauthorized copying of this file, via any medium is strictly prohibited.

# Build stage
FROM python:3.10.12-slim as builder

# Add build arguments
ARG DJANGO_SETTINGS_MODULE=multitenantsaas.settings
ARG APP_USER=appuser
ARG APP_GROUP=appgroup

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE} \
    PATH="/home/${APP_USER}/.local/bin:${PATH}"

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    build-essential \
    python3-psycopg2 \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set the working directory
WORKDIR /djangoapp

# Copy requirements first to leverage cache
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Collect static files and run migrations
RUN python manage.py collectstatic --noinput && \
    python manage.py makemigrations && \
    python manage.py migrate

# Final stage
FROM python:3.10.12-slim

# Add build arguments
ARG DJANGO_SETTINGS_MODULE=multitenantsaas.settings
ARG APP_USER=appuser
ARG APP_GROUP=appgroup

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE} \
    PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-psycopg2 \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r ${APP_GROUP} \
    && useradd -r -g ${APP_GROUP} -s /bin/bash ${APP_USER}

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set the working directory
WORKDIR /djangoapp

# Copy application code and static files from builder
COPY --from=builder /djangoapp /djangoapp
COPY --from=builder /djangoapp/staticfiles /djangoapp/staticfiles

# Set proper permissions
RUN chown -R ${APP_USER}:${APP_GROUP} /djangoapp

# Switch to non-root user
USER ${APP_USER}

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8585/health/ || exit 1

# Expose port
EXPOSE 8585

# Run the application
CMD ["gunicorn", "--bind", "0.0.0.0:8585", "--workers", "4", "--threads", "4", "multitenantsaas.wsgi:application"]
