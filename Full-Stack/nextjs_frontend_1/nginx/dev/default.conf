# Defining a new cache named STATIC with 2 level folder structure and 10 mb size. Will be cleared after 7 days.
# Will use this cache later to cache the static files provided by next.js server
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

server {
  listen 80 default_server;
  server_name _;  # Matches any server name
  server_tokens off;
  charset utf-8;

  location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
  }

  root /usr/share/nginx/html;
  index index.html;

  # Next.js recommended configurations
  # proxy_pass http://prodxcloud_upstream;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;


  # Using GZip to compress all text based files with compression level 4 before sending it to the client. 
  # Note: Only running on text files because that is where we get maximum efficiency
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  # # Caching the built files in the _next/static folder so that NGINX can serve the cached files
  # # We're using the STATIC cache defined on line 3
  location /_next/static {
    proxy_cache STATIC;
    # proxy_pass http://prodxcloud_upstream;
  }

  # Caching static files like images, logos, etc. Cache is valid for 60 minutes, meaning that every 60 minutes
  # NGINX will update the cache with files from the Next.js server
  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    # proxy_pass http://localhost:3000;
  }
  
  # Define forwarding location for all requests. Using localhost server group defined above
  location / {
    try_files $uri $uri/ /index.html;
    # proxy_pass http://localhost:3000;
  }

}
